{"version":3,"sources":["context/AuthContext.js","utils/PrivateRoute.js","components/Header.js","pages/HomePage.js","pages/LoginPage.js","App.js","index.js"],"names":["AuthContext","createContext","AuthProvider","children","useState","localStorage","getItem","JSON","parse","authTokens","setAuthTokens","jwt_decode","user","setUser","loading","setLoading","logInError","setLogInError","history","useHistory","logInUser","e","a","preventDefault","fetch","method","headers","body","stringify","username","target","value","password","response","json","tokens","status","access","setItem","push","logOutUser","removeItem","updateTokens","refresh","contextData","useEffect","intervalID","setInterval","clearInterval","Provider","PrivateRoute","rest","useContext","to","Header","className","onClick","HomePage","notes","setNotes","getNotes","Authorization","String","data","map","note","id","LoginPage","onSubmit","for","type","name","placeholder","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37970ca8.chunk.js","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authTokens, setAuthTokens] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  const [user, setUser] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  const [loading, setLoading] = useState(true);\r\n  const [logInError, setLogInError] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const logInUser = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: e.target.username.value,\r\n        password: e.target.password.value,\r\n      }),\r\n    });\r\n    const tokens = await response.json();\r\n    if (response.status === 200) {\r\n      setAuthTokens(tokens);\r\n      setUser(jwt_decode(tokens.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(tokens));\r\n      setLogInError(false);\r\n      history.push(\"/\");\r\n    } else {\r\n      setLogInError(true);\r\n    }\r\n  };\r\n\r\n  const logOutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const updateTokens = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ refresh: authTokens?.refresh }),\r\n    });\r\n    const tokens = await response.json();\r\n    if (response.status === 200) {\r\n      setAuthTokens(tokens);\r\n      setUser(jwt_decode(tokens.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(tokens));\r\n    } else {\r\n      logOutUser();\r\n    }\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const contextData = {\r\n    user: user,\r\n    authTokens: authTokens,\r\n    logInError: logInError,\r\n    logInUser: logInUser,\r\n    logOutUser: logOutUser,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading && authTokens) {\r\n      updateTokens();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n\r\n    if (authTokens) {\r\n      const fourMinutes = 1000 * 60 * 4;\r\n      const intervalID = setInterval(() => {\r\n        updateTokens();\r\n      }, fourMinutes);\r\n      return () => clearInterval(intervalID);\r\n    }\r\n  }, [authTokens, loading]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>\r\n      {loading ? null : children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import {Route, Redirect} from 'react-router-dom'\r\nimport { useContext } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n    const {user} = useContext(AuthContext)\r\n\r\n    return <Route {...rest}>{!user ? <Redirect to=\"/login\"/> : children}</Route>;\r\n}\r\n\r\nexport default PrivateRoute","import \"./styles/Header.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nconst Header = () => {\r\n  const { user, logOutUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"container-fluid header\">\r\n      <p className=\"logo\">Access and Refresh Tokens</p>\r\n      {user && (\r\n        <p className=\"user-message\">\r\n          Hello, <span className=\"username\">{user.username}</span>\r\n        </p>\r\n      )}\r\n      <Link className=\"btn btn-primary home-btn\" to=\"/\">\r\n        Home\r\n      </Link>\r\n      {user && (\r\n        <button className=\"btn btn-primary logout-btn\" onClick={logOutUser}>\r\n          Log out\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './styles/HomePage.css'\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nconst HomePage = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const { authTokens, logOutUser } = useContext(AuthContext);\r\n\r\n  const getNotes = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/notes/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + String(authTokens.access),\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    if (response.status === 200) {\r\n      setNotes(data);\r\n    } else if (response.status === 401) {\r\n        logOutUser();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container home-container\">\r\n      <p className=\"home-message\">You are logged to the home page</p>\r\n      <ul className=\"list-group\">\r\n        {notes.map((note) => (\r\n          <li className=\"list-group-item\" key={note.id}>\r\n            {note.body}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"home-message\">Tokens</p>\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">\r\n          Access: <span>{authTokens.access}</span>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          Refresh: <span>{authTokens.refresh}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import \"./styles/LoginPage.css\";\r\nimport React, { useContext } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nconst LoginPage = () => {\r\n  const { logInError, logInUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {logInError && (\r\n        <p className=\"login-error\">Invalid username or password</p>\r\n      )}\r\n      <form onSubmit={logInUser}>\r\n        <div className=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            className=\"form-control\"\r\n            id=\"username\"\r\n            placeholder=\"Enter Username\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"userpass\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            id=\"userpass\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport { AuthProvider } from \"./context/AuthContext\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AuthProvider>\n          <Header />\n          <PrivateRoute exact path=\"/\" component={HomePage}></PrivateRoute>\n          <Route path=\"/login\" component={LoginPage}></Route>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}